name: Docker

on:
    pull_request:
        paths:
            - 'docker/**'
            - '.github/workflows/docker.yml'

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true



jobs:

  docker_builds:

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: alpine-small-amd64
            image_name: alpine-small
            arch: amd64
            gha_image: ubuntu-latest

          - name: alpine-normal-amd64
            image_name: alpine-small
            arch: amd64
            gha_image: ubuntu-latest

          - name: ubuntu-small-amd64
            image_name: ubuntu-small
            arch: amd64
            gha_image: ubuntu-latest

          - name: ubuntu-small-arm64
            image_name: ubuntu-small
            arch: arm64
            gha_image: ubuntu-24.04-arm

          - name: ubuntu-full-amd64-proprietary-sdks
            image_name: ubuntu-full
            arch: amd64
            gha_image: ubuntu-24.04

          - name: ubuntu-full-arm64
            image_name: ubuntu-full
            arch: arm64
            gha_image: ubuntu-24.04-arm

    name: ${{ matrix.name }}

    runs-on: ${{ matrix.gha_image }}
    permissions:
      contents: read
      attestations: write
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "debug": false,
              "features": {
                "containerd-snapshotter": true
              }
            }
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: j9ac9k
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        shell: bash -l {0}
        env:
          TARGET_IMAGE: j9ac9k/gdal
        run: |
          docker run --rm --platform linux/amd64 --privileged linuxkit/binfmt:v0.8
          cd docker/${{ matrix.image_name }}
          if test "${{ matrix.name }}" = "ubuntu-full-amd64-proprietary-sdks"; then
            ./build.sh --platform linux/${{ matrix.arch }} --with-multi-arch --gdal-repository j9ac9k/gdal --push --with-oracle --with-mrsid --with-ecw
          else
            ./build.sh --platform linux/${{ matrix.arch }} --with-multi-arch --gdal-repository j9ac9k/gdal --push
          fi
          docker run --rm ghcr.io/j9ac9k/gdal:${{ matrix.image_name }}-latest-${{ matrix.arch }} gdalinfo --formats
          docker run --rm ghcr.io/j9ac9k/gdal:${{ matrix.image_name }}-latest-${{ matrix.arch }} ogrinfo --formats
